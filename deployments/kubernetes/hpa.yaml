apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: alchemorsel-api-hpa
  namespace: alchemorsel
  labels:
    app.kubernetes.io/name: alchemorsel-api
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/part-of: alchemorsel-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: alchemorsel-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics from Prometheus
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  # External metrics (e.g., SQS queue length, custom business metrics)
  - type: External
    external:
      metric:
        name: ai_request_queue_length
        selector:
          matchLabels:
            service: alchemorsel-api
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max
---
# Vertical Pod Autoscaler for resource optimization
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: alchemorsel-api-vpa
  namespace: alchemorsel
  labels:
    app.kubernetes.io/name: alchemorsel-api
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/part-of: alchemorsel-platform
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: alchemorsel-api
  updatePolicy:
    updateMode: "Auto"  # "Auto", "Initial", "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: alchemorsel-api
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2
        memory: 2Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: alchemorsel-api-pdb
  namespace: alchemorsel
  labels:
    app.kubernetes.io/name: alchemorsel-api
    app.kubernetes.io/component: policy
    app.kubernetes.io/part-of: alchemorsel-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: alchemorsel-api
---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: alchemorsel-api-netpol
  namespace: alchemorsel
  labels:
    app.kubernetes.io/name: alchemorsel-api
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: alchemorsel-platform
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: alchemorsel-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow access to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow HTTPS outbound (for AI services, external APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound
  - to: []
    ports:
    - protocol: TCP
      port: 80