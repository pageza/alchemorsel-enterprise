# Production Prometheus Configuration for Alchemorsel v3
# Comprehensive monitoring with service discovery, alerting, and SLO tracking

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'alchemorsel-production'
    replica: 'prometheus-1'
    environment: 'production'

rule_files:
  - "rules/slo/*.yml"
  - "rules/alerts/*.yml"
  - "rules/recording/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

scrape_configs:
  # === Core Infrastructure ===
  
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    honor_labels: true

  # Alchemorsel API - Primary application
  - job_name: 'alchemorsel-api'
    static_configs:
      - targets: ['api:8080']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - target_label: service
        replacement: alchemorsel-api
      - target_label: component
        replacement: application
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop  # Drop Go runtime metrics to reduce cardinality

  # Alchemorsel Worker
  - job_name: 'alchemorsel-worker'
    static_configs:
      - targets: ['worker:8081']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: alchemorsel-worker
      - target_label: component
        replacement: background-jobs

  # === Database Layer ===
  
  # PostgreSQL Exporter
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: postgresql
      - target_label: component
        replacement: database

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    relabel_configs:
      - target_label: service
        replacement: redis
      - target_label: component
        replacement: cache

  # === System Metrics ===
  
  # Node Exporter for host-level metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter-api:9100'
        - 'node-exporter-worker:9100'
        - 'node-exporter-db:9100'
    scrape_interval: 15s
    relabel_configs:
      - target_label: component
        replacement: system

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    relabel_configs:
      - target_label: component
        replacement: containers
    metric_relabel_configs:
      # Keep only essential container metrics
      - source_labels: [__name__]
        regex: 'container_(cpu_usage_seconds_total|memory_working_set_bytes|network_.*_bytes_total|fs_.*_bytes)'
        action: keep

  # === Load Balancer & Proxy ===
  
  # Nginx/Load Balancer
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s
    relabel_configs:
      - target_label: service
        replacement: nginx
      - target_label: component
        replacement: load-balancer

  # === External Services ===
  
  # AI Service Monitoring (Ollama)
  - job_name: 'ollama-ai'
    static_configs:
      - targets: ['ollama:11434']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 15s
    relabel_configs:
      - target_label: service
        replacement: ollama
      - target_label: component
        replacement: ai-service

  # MinIO S3 Storage
  - job_name: 'minio'
    static_configs:
      - targets: ['minio:9000']
    scrape_interval: 30s
    metrics_path: /minio/v2/metrics/cluster
    relabel_configs:
      - target_label: service
        replacement: minio
      - target_label: component
        replacement: storage

  # === Service Discovery (Kubernetes) ===
  
  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ['alchemorsel-production']
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods with annotation-based discovery
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['alchemorsel-production']
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Kubernetes Services
  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ['alchemorsel-production']
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2

  # === Service Discovery (Consul) ===
  
  # Consul service discovery for dynamic environments
  - job_name: 'consul-services'
    consul_sd_configs:
      - server: 'consul:8500'
        services: []
        tag_separator: ","
        scheme: http
    relabel_configs:
      - source_labels: [__meta_consul_tags]
        regex: .*,prometheus,.*
        action: keep
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node

  # === Health Check Endpoints ===
  
  # Black box exporter for external health checks
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://app.alchemorsel.com/health
        - https://api.alchemorsel.com/health
        - https://app.alchemorsel.com/api/v1/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # === Business Logic Monitoring ===
  
  # Custom business metrics from application
  - job_name: 'alchemorsel-business-metrics'
    static_configs:
      - targets: ['api:8080']
    scrape_interval: 30s
    metrics_path: /metrics/business
    relabel_configs:
      - target_label: component
        replacement: business-logic

# Remote write configuration for long-term storage
remote_write:
  # Primary remote write target (e.g., Cortex, Thanos, or managed service)
  - url: "https://prometheus-remote-write.alchemorsel.com/api/v1/write"
    basic_auth:
      username: "alchemorsel-production"
      password_file: "/etc/prometheus/secrets/remote-write-password"
    queue_config:
      max_samples_per_send: 2000
      max_shards: 500
      capacity: 10000
      batch_send_deadline: 5s
      min_shards: 10
      max_shards_per_queue: 50
    write_relabel_configs:
      # Drop high cardinality metrics for cost optimization
      - source_labels: [__name__]
        regex: 'go_memstats_.*'
        action: drop
      # Keep only essential metrics for long-term storage
      - source_labels: [__name__]
        regex: '(http_requests_total|http_request_duration_.*|error_rate_total|uptime_seconds_total|recipes_.*_total|users_.*_total)'
        action: keep
  
  # Secondary remote write for compliance/audit
  - url: "https://audit-prometheus.alchemorsel.com/api/v1/write"
    basic_auth:
      username: "alchemorsel-audit"
      password_file: "/etc/prometheus/secrets/audit-write-password"
    queue_config:
      max_samples_per_send: 1000
      capacity: 5000

# Storage configuration optimized for production
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d  # Extended retention for production
    retention.size: 200GB  # Larger storage allocation
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# Query optimization
query:
  max_concurrency: 20
  timeout: 2m
  max_samples: 50000000

# Web configuration
web:
  enable-lifecycle: true
  enable-admin-api: false  # Disable admin API in production
  max-connections: 512
  read-timeout: 30s
  
# Feature flags
feature_flags:
  - promql-at-modifier
  - expand-external-labels