# Alchemorsel v3 Development Proxy Configuration
# Routes traffic and injects live reload functionality

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format for development
    log_format dev '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log dev;

    # Development optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Disable caching in development
    expires -1;
    add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";

    # CORS headers for development
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type, Authorization" always;

    # Live reload injection
    # This JavaScript code will be injected into HTML responses
    map $sent_http_content_type $livereload_js {
        ~*text/html '<script src="http://localhost:35729/livereload.js?snipver=1"></script>';
    }

    # Upstream services
    upstream api_backend {
        server api-dev:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream web_backend {
        server web-dev:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream livereload_backend {
        server livereload:35729;
    }

    upstream dashboard_backend {
        server dashboard:3030;
    }

    # Development server block
    server {
        listen 80;
        server_name localhost;

        # Security headers (relaxed for development)
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

        # Root location - route to web service
        location / {
            proxy_pass http://web_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300;
            proxy_connect_timeout 75;

            # Inject live reload script into HTML responses
            sub_filter '</head>' '${livereload_js}</head>';
            sub_filter_once on;
            sub_filter_types text/html;
        }

        # API routes
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300;
            proxy_connect_timeout 75;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://api_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://api_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OpenAPI/Swagger documentation
        location /swagger/ {
            proxy_pass http://api_backend/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static assets (served from assets volume with live reload)
        location /assets/ {
            alias /usr/share/nginx/html/assets/;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            
            # Enable CORS for assets
            add_header Access-Control-Allow-Origin "*" always;
        }

        # Live reload WebSocket
        location /livereload {
            proxy_pass http://livereload_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Development dashboard
        location /dev-dashboard/ {
            proxy_pass http://dashboard_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Development status page
        location /dev-status {
            default_type application/json;
            return 200 '{
                "service": "alchemorsel-dev-proxy",
                "status": "healthy",
                "timestamp": "$time_iso8601",
                "upstreams": {
                    "api": "http://api-dev:8080",
                    "web": "http://web-dev:8081",
                    "livereload": "http://livereload:35729",
                    "dashboard": "http://dashboard:3030"
                },
                "features": {
                    "live_reload": true,
                    "hot_reload": true,
                    "cors_enabled": true,
                    "cache_disabled": true
                }
            }';
        }

        # Error pages for development
        error_page 404 /404.html;
        location = /404.html {
            default_type text/html;
            return 404 '<!DOCTYPE html>
            <html>
            <head>
                <title>404 Not Found - Alchemorsel v3 Dev</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                    .container { max-width: 600px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                    h1 { color: #e74c3c; }
                    .info { background: #ecf0f1; padding: 20px; border-radius: 4px; margin: 20px 0; }
                    .links a { display: inline-block; margin: 5px 10px 5px 0; padding: 8px 16px; background: #3498db; color: white; text-decoration: none; border-radius: 4px; }
                    .links a:hover { background: #2980b9; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üîç Page Not Found</h1>
                    <p>The requested page could not be found in the Alchemorsel v3 development environment.</p>
                    <div class="info">
                        <strong>Development Environment Status:</strong><br>
                        ‚úÖ Nginx Proxy: Running<br>
                        üîÑ Live Reload: Enabled<br>
                        üåê CORS: Enabled<br>
                        üíæ Caching: Disabled
                    </div>
                    <div class="links">
                        <a href="/">üè† Home</a>
                        <a href="/api/health">üè• API Health</a>
                        <a href="/swagger/">üìö API Docs</a>
                        <a href="/dev-dashboard/">üõ†Ô∏è Dashboard</a>
                        <a href="/dev-status">üìä Status</a>
                    </div>
                </div>
                <script src="http://localhost:35729/livereload.js?snipver=1"></script>
            </body>
            </html>';
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            default_type text/html;
            return 500 '<!DOCTYPE html>
            <html>
            <head>
                <title>Server Error - Alchemorsel v3 Dev</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                    .container { max-width: 600px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                    h1 { color: #e74c3c; }
                    .error { background: #ffe6e6; padding: 20px; border-radius: 4px; margin: 20px 0; border-left: 4px solid #e74c3c; }
                    .info { background: #ecf0f1; padding: 20px; border-radius: 4px; margin: 20px 0; }
                    .links a { display: inline-block; margin: 5px 10px 5px 0; padding: 8px 16px; background: #3498db; color: white; text-decoration: none; border-radius: 4px; }
                    .links a:hover { background: #2980b9; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>‚ö†Ô∏è Server Error</h1>
                    <p>An error occurred while processing your request in the development environment.</p>
                    <div class="error">
                        <strong>Possible Causes:</strong><br>
                        ‚Ä¢ Backend service is starting up<br>
                        ‚Ä¢ Code compilation error<br>
                        ‚Ä¢ Database connection issue<br>
                        ‚Ä¢ Configuration problem
                    </div>
                    <div class="info">
                        <strong>Development Debugging:</strong><br>
                        ‚Ä¢ Check container logs: <code>docker-compose logs -f</code><br>
                        ‚Ä¢ API Service: <code>docker-compose logs api-dev</code><br>
                        ‚Ä¢ Web Service: <code>docker-compose logs web-dev</code>
                    </div>
                    <div class="links">
                        <a href="/">üè† Home</a>
                        <a href="/dev-status">üìä Status</a>
                        <a href="/dev-dashboard/">üõ†Ô∏è Dashboard</a>
                    </div>
                </div>
                <script src="http://localhost:35729/livereload.js?snipver=1"></script>
            </body>
            </html>';
        }
    }

    # Server block for direct API access (bypass web service)
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Server block for direct web access
    server {
        listen 8081;
        server_name localhost;

        location / {
            proxy_pass http://web_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Inject live reload script
            sub_filter '</head>' '${livereload_js}</head>';
            sub_filter_once on;
            sub_filter_types text/html;
        }
    }
}